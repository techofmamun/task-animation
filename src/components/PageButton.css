/* Base button styling */
.form-page {
  display: flex;
  align-items: center;
  gap: 8px;
  padding: 8px 16px;
  border-radius: 8px;
  cursor: grab;
  background-color: #9da4b226;
  border: 1px solid #e9ecef;
  position: relative;
  user-select: none;
  white-space: nowrap;
  color: #6c757d;
  font-size: 14px;
  height: 50px;
  width: 125px;
  transform: translateY(0) scale(1) rotate(0deg);
  will-change: transform;
  transition: transform 0.35s cubic-bezier(0.34, 1.56, 0.64, 1),
    background-color 0.3s ease-out, border-color 0.3s ease-out,
    color 0.3s ease-out, box-shadow 0.35s cubic-bezier(0.34, 1.56, 0.64, 1);
  outline: none !important;
  --svg-color: #8c93a1;
  touch-action: none;
  -webkit-touch-callout: none;
  -webkit-tap-highlight-color: transparent;
  box-sizing: border-box;
}

.form-page:active {
  cursor: grabbing;
  transform: translateY(2px) scale(0.98);
  transition: transform 0.1s ease-out;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
}

/* Active page styling */
.form-page.active {
  background-color: #fff;
  color: #1a1a1a;
  font-weight: 500;
  box-shadow: 0 2px 8px rgba(0, 86, 179, 0.15);
  --svg-color: #f59d0e;
}

.form-page.active:hover {
  border-color: #bee5eb;
  box-shadow: 0 8px 25px rgba(0, 86, 179, 0.25);
}

/* Hover state */
.form-page:hover:not(.dragging):not(.deleting):not(.drag-settling-physics):not(.active) {
  background-color: #9da4b259;
  border-color: #dee2e6;
  color: #495057;
  box-shadow: 0 8px 25px rgba(0, 0, 0, 0.12);
}

/* Dragging state */
.form-page.dragging {
  opacity: 0.8;
  transform: scale(1.06) translateZ(0);
  box-shadow: 0 24px 60px rgba(0, 0, 0, 0.25);
  cursor: grabbing !important;
  z-index: 999;
  background: linear-gradient(135deg, #ffffff 0%, #f8f9fa 100%);
}

/* Drag over state */
.form-page.drag-over {
  transform: translateX(4px) scale(0.97) rotate(0.5deg);
  opacity: 0.85;
  transition: all 0.3s cubic-bezier(0.23, 1, 0.32, 1);
  box-shadow: 0 6px 20px rgba(100, 181, 246, 0.3);
}


/* Content styling */
.page-content {
  display: flex;
  align-items: center;
  gap: 6px;
}

.page-name {
  font-size: inherit;
  font-weight: inherit;
  color: inherit;
}

.page-content svg {
  width: 20px;
  height: 20px;
  color: var(--svg-color);
}

.form-page svg [stroke] {
  stroke: var(--svg-color);
}

.form-page svg [fill]:not([fill="none"]) {
  fill: var(--svg-color);
}

/* Mobile optimizations */
@media (hover: none) and (pointer: coarse) {
  .form-page {
    min-height: 44px;
    padding: 12px 16px;
    /* Slightly larger touch target for mobile */
    width: 135px;
  }

  .form-page:active {
    transform: translateY(1px) scale(0.98);
  }

  .form-page.dragging {
    opacity: 0.9;
    transform: scale(1.05) translateZ(0);
    box-shadow: 0 12px 35px rgba(0, 0, 0, 0.35);
  }
  
  /* Increase visual feedback for mobile */
  .form-page.drag-settling-spring {
    animation-duration: calc(var(--spring-duration, 0.8s) * 1.1) !important;
  }
}

@media (max-width: 768px) {
  .form-page {
    cursor: grab;
    -webkit-cursor: grab;
  }

  .form-page.dragging {
    cursor: grabbing;
    -webkit-cursor: grabbing;
  }
}

/* Prevent scrolling during drag */
body.dragging {
  overflow: hidden;
  position: fixed;
  width: 100%;
  height: 100%;
  touch-action: none;
}

/* New page animation */
.form-page.newly-added {
  animation: pageSlideIn 0.5s cubic-bezier(0.34, 1.56, 0.64, 1);
}
@keyframes pageSlideIn {
  from {
    opacity: 0;
    transform: translateX(-20px) scale(0.95);
  }
  to {
    opacity: 1;
    transform: translateX(0) scale(1);
  }
}

/* Delete animation */
.form-page.deleting {
  animation: pageDelete 0.5s cubic-bezier(0.4, 0, 0.2, 1) forwards;
}

@keyframes pageDelete {
  from {
    opacity: 1;
    transform: translateY(0) scale(1);
  }
  to {
    opacity: 0;
    transform: translateY(20px) scale(0.95);
  }
}

/* Drag settle animation - Dynamic spring based on drag distance */
.form-page.drag-settling-spring {
  animation: dragPhysicsSettleSpring var(--spring-duration, 0.8s) cubic-bezier(0.175, 0.885, 0.32, 1.275);
  animation-fill-mode: forwards;
  will-change: transform, box-shadow;
  /* Add a subtle initial shadow for the animation */
  box-shadow: 0 12px 30px rgba(0, 0, 0, 0.15);
}

@keyframes dragPhysicsSettleSpring {
  0% {
    transform: scale(calc(1 + 0.06 * var(--spring-intensity, 1))) 
               translateY(calc(-4px * var(--spring-intensity, 1))) 
               rotate(calc(1.5deg * var(--spring-intensity, 1)));
    box-shadow: 0 calc(6px * var(--spring-intensity, 1)) calc(25px * var(--spring-intensity, 1)) rgba(0, 0, 0, 0.15);
  }
  10% {
    transform: scale(calc(1 - 0.05 * var(--spring-intensity, 1))) 
               translateY(calc(1.8px * var(--spring-intensity, 1))) 
               rotate(calc(-0.7deg * var(--spring-intensity, 1)));
    box-shadow: 0 calc(2px * var(--spring-intensity, 1)) calc(10px * var(--spring-intensity, 1)) rgba(0, 0, 0, 0.08);
  }
  20% {
    transform: scale(calc(1 + 0.04 * var(--spring-intensity, 1))) 
               translateY(calc(-1.4px * var(--spring-intensity, 1))) 
               rotate(calc(0.4deg * var(--spring-intensity, 1)));
    box-shadow: 0 calc(4px * var(--spring-intensity, 1)) calc(15px * var(--spring-intensity, 1)) rgba(0, 0, 0, 0.12);
  }
  32% {
    transform: scale(calc(1 - 0.025 * var(--spring-intensity, 1))) 
               translateY(calc(0.9px * var(--spring-intensity, 1))) 
               rotate(calc(-0.2deg * var(--spring-intensity, 1)));
    box-shadow: 0 calc(2px * var(--spring-intensity, 1)) calc(8px * var(--spring-intensity, 1)) rgba(0, 0, 0, 0.06);
  }
  45% {
    transform: scale(calc(1 + 0.015 * var(--spring-intensity, 1))) 
               translateY(calc(-0.6px * var(--spring-intensity, 1))) 
               rotate(calc(0.1deg * var(--spring-intensity, 1)));
    box-shadow: 0 calc(3px * var(--spring-intensity, 1)) calc(10px * var(--spring-intensity, 1)) rgba(0, 0, 0, 0.08);
  }
  60% {
    transform: scale(calc(1 - 0.008 * var(--spring-intensity, 1))) 
               translateY(calc(0.3px * var(--spring-intensity, 1))) 
               rotate(calc(-0.05deg * var(--spring-intensity, 1)));
  }
  75% {
    transform: scale(calc(1 + 0.004 * var(--spring-intensity, 1))) 
               translateY(calc(-0.15px * var(--spring-intensity, 1))) 
               rotate(calc(0.02deg * var(--spring-intensity, 1)));
  }
  88% {
    transform: scale(calc(1 - 0.002 * var(--spring-intensity, 1))) 
               translateY(calc(0.06px * var(--spring-intensity, 1)));
  }
  100% {
    transform: scale(1) translateY(0) rotate(0deg);
    box-shadow: none;
  }
}
